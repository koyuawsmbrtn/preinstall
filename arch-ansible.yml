---
- name: Install Arch with GNOME and optional Nvidia drivers
  hosts: localhost
  become: yes
  vars_prompt:
    - name: install_nvidia
      prompt: "Do you want to install the open-source Nvidia drivers? (yes/no)"
      private: no
    - name: tv_mode
      prompt: "Do you want to set up TV mode? (yes/no)"
      private: no
    - name: sudo_password
      prompt: "Enter sudo password for yay commands"
      private: yes

  tasks:
    - name: Adding Chaotic-AUR repo
      become: yes
      shell: |
        pacman-key --recv-key 3056513887B78AEB --keyserver keyserver.ubuntu.com
        pacman-key --lsign-key 3056513887B78AEB
        pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-keyring.pkg.tar.zst' --noconfirm
        pacman -U 'https://cdn-mirror.chaotic.cx/chaotic-aur/chaotic-mirrorlist.pkg.tar.zst' --noconfirm
      args:
        executable: /bin/bash
    - name: Configure pacman
      become: yes
      shell: cp pacman.conf /etc/pacman.conf
      args:
        executable: /bin/bash

    - name: Update system
      pacman:
        update_cache: yes
        upgrade: yes

    - name: Configure makepkg
      become: yes
      shell: cp makepkg.conf /etc/makepkg.conf
      args:
        executable: /bin/bash

    - name: Fix archinstall lockout issue
      become: yes
      shell: cp faillock.conf /etc/security/faillock.conf
      args:
        executable: /bin/bash

    - name: Create temporary sudo password file
      become: no
      copy:
        content: "{{ sudo_password }}"
        dest: /tmp/sudo_pass
        mode: '0600'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"

    - name: Install base packages
      pacman:
        name:
          - base
          - linux
          - linux-firmware
          - linux-headers
          - sudo
          - nano
          - networkmanager
          - git
          - ansible
          - gnome
          - gnome-tweaks
          - gnome-shell-extensions
          - gnome-shell-extension-appindicator
          - cups
          - cups-browsed
          - avahi
          - gnome-bluetooth
          - curl
          - wget
          - bash-completion
          - base-devel
          - yay
        state: present

    - name: Remove bloat
      pacman:
        name:
          - gnome-software
          - gnome-software-packagekit-plugin
          - gnome-music
          - gnome-sound-recorder
          - transmission-gtk
          - gnome-system-monitor
        state: absent

    - name: Install Nvidia open-source drivers (if selected)
      pacman:
        name:
          - nvidia-open-dkms
          - nvidia-utils
          - lib32-nvidia-utils
        state: present
      when: install_nvidia == 'yes'
    
    - name: Set up TV mode (if selected)
      when: tv_mode == 'yes'
      block:
        - name: Install Google Chrome
          become: no
          shell: "echo '{{ sudo_password }}' | sudo -S yay -S --noconfirm --needed google-chrome"
          args:
            executable: /bin/bash
        - name: Copy .desktop file for TV mode
          become: no
          copy:
            src: tv-mode.desktop
            dest: ~/.local/share/applications/tv-mode.desktop
        - name: Set up icon for TV mode
          become: yes
          shell: |
            cp television.png /usr/share/pixmaps/television.png
          args:
            executable: /bin/bash
        - name: Set up TV mode
          become: no
          shell: |
            mkdir -p ~/.config/autostart
            cp ~/.local/share/applications/tv-mode.desktop ~/.config/autostart/
          args:
            executable: /bin/bash
        - name: Autologin for TV mode
          become: no
          shell: echo $USER > /tmp/user
          args:
            executable: /bin/bash
        - name: Set up autologin for TV mode
          lineinfile:
            path: /etc/gdm/custom.conf
            insertafter: "WaylandEnable=true"
            line: "AutomaticLoginEnable=true"
            state: present
        - name: Set up autologin user for TV mode
          lineinfile:
            path: /etc/gdm/custom.conf
            line: "AutomaticLogin={{ lookup('file', '/tmp/user') }}"
            insertafter: "AutomaticLoginEnable=true"
            state: present
        - name: Remove temporary files
          shell: rm -f /tmp/user
          args:
            executable: /bin/bash
        - name: Delete keyring for TV mode
          become: no
          shell: |
            rm -rf ~/.local/share/keyrings/
          args:
            executable: /bin/bash

    - name: Enable NetworkManager
      systemd:
        name: NetworkManager
        enabled: yes
        state: started
    
    - name: Disable NetworkManager-wait-online
      systemd:
        name: NetworkManager-wait-online
        enabled: no
        state: stopped
    
    - name: Enable Bluetooth
      systemd:
        name: bluetooth
        enabled: yes
        state: started

    - name: Enable GDM
      systemd:
        name: gdm
        enabled: yes
    
    - name: Force Wayland for GDM
      lineinfile:
        path: /etc/gdm/custom.conf
        regexp: "^#WaylandEnable=false"
        line: "WaylandEnable=true"
        state: present

    - name: Enable CUPS for printer support
      systemd:
        name: cups
        enabled: yes
        state: started

    - name: Enable Avahi daemon
      systemd:
        name: avahi-daemon
        enabled: yes
        state: started

    - name: Install additional packages from file using yay
      become: no
      shell: "echo '{{ sudo_password }}' | sudo -S yay -S --noconfirm --needed {{ item }}"
      args:
        executable: /bin/bash
      loop: "{{ lookup('file', 'arch').splitlines() }}"
    
    - name: Install additional packages using flatpak
      become: no
      shell: "flatpak install -y flathub {{ item }}"
      loop:
        - org.gtk.Gtk3theme.adw-gtk3-dark
    
    - name: Enable dark mode
      become: no
      shell: gsettings set org.gnome.desktop.interface gtk-theme 'adw-gtk3-dark' && gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
      args:
        executable: /bin/bash

    - name: Install GNOME Extension Installer
      become: yes
      shell: |
        mkdir -p /usr/local/bin
        curl -L https://raw.githubusercontent.com/jasonmb626/gnome-shell-extension-installer/master/gnome-shell-extension-installer > /usr/local/bin/gnome-shell-extension-installer
        chmod +x /usr/local/bin/gnome-shell-extension-installer

    - name: Install GNOME Shell Extensions as user
      become: no
      shell: "gnome-shell-extension-installer {{ item }} --yes"
      loop:
        - 307
        - 5895
        - 517
        - 4269
        - 6727
        - 4805
        - 6096
        - 5410
      args:
        executable: /bin/bash

    - name: Enable GNOME Shell Extensions as user
      become: no
      shell: "gnome-extensions enable {{ item }}"
      loop:
        - app-hider@lynith.dev
        - caffeine@patapon.info
        - AlphabeticalAppGrid@stuarthayhurst
        - dash-to-dock@micxgx.gmail.com
        - appindicatorsupport@rgcjonas.gmail.com
        - hide-cursor@elcste.com
        - panel-corners@aunetx
        - smile-extension@mijorus.it
        - grand-theft-focus@zalckos.github.com
      args:
        executable: /bin/bash

    - name: Configure dconf to hide specific apps
      become: no
      dconf:
        key: "/org/gnome/shell/extensions/app-hider/hidden-apps"
        value: "['bssh.desktop', 'bvnc.desktop', 'avahi-discover.desktop', 'qv4l2.desktop', 'qvidcap.desktop', 'signal-tray.desktop', 'electron34.desktop', 'electron35.desktop', 'org.gnome.Extensions.desktop', 'htop.desktop', 'weechat.desktop', 'vim.desktop', 'Team Fortress 2.desktop', 'THE FINALS.desktop', 'Overwatch 2.desktop', 'Palia.desktop', 'org.gnome.Sysprof.desktop', 'cmake-gui.desktop', 'hplip.desktop', 'hp-uiscan.desktop', 'cups.desktop', 'steam.desktop', 'assistant.desktop', 'qdbusviewer.desktop', 'linguist.desktop', 'designer.desktop', 'nm-connection-editor.desktop', 'fluid.desktop', 'electron31.desktop', 'org.pulseaudio.pavucontrol.desktop']"

    - name: Configure Dash to Dock
      become: no
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/disable-overview-on-startup"
        value: "true"
    - name: Configure Dash to Dock
      become: no
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/click-action"
        value: "'minimize'"
    - name: Configure Dash to Dock
      become: no
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/show-mounts"
        value: "false"
    - name: Configure Dash to Dock
      become: no
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/show-trash"
        value: "false"
    - name: Configure Dash to Dock
      become: no
      dconf:
        key: "/org/gnome/shell/extensions/dash-to-dock/hot-keys"
        value: "false"
    - name: Configure Dash to Dock
      become: no
      dconf:
        key: "/org/gnome/shell/favorite-apps"
        value: "['org.gnome.Nautilus.desktop', 'floorp.desktop', 'org.gnome.Evolution.desktop', 'tidal-hifi.desktop', 'obsidian.desktop', 'signal-desktop.desktop', 'io.element.Element.desktop', 'discord.desktop', 'org.telegram.desktop.desktop', 'org.gnome.Calendar.desktop', 'steam-native.desktop', 'io.itch.itch.desktop', 'dolphin-emu.desktop', 'chrome-lhedecbjcehgjijkmihhhfmdicbkkgkm-Default.desktop', 'cursor.desktop', 'vmware-workstation.desktop', 'org.gnome.Settings.desktop', 'org.gnome.Console.desktop']"

    - name: Configure keyboard shortcuts
      become: no
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-windows-backward"
        value: "['<Shift><Alt>Tab']"
    - name: Configure keyboard shortcuts
      become: no
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/switch-windows"
        value: "['<Alt>Tab']"
    - name: Configure keyboard shortcuts
      become: no
      dconf:
        key: "/org/gnome/desktop/wm/keybindings/show-desktop"
        value: "['<Super>d']"
    - name: Configure keyboard shortcuts
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/home"
        value: "['<Super>e']"
    - name: Configure keyboard shortcuts
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"
        value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/']"
    - name: Configure Terminal keyboard shortcut
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/name"
        value: "'Terminal'"

    - name: Configure Terminal command
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/command"
        value: "'kgx'"

    - name: Configure Terminal binding
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/binding"
        value: "'<Control><Alt>t'"

    - name: Configure Mission Center keyboard shortcut
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/name"
        value: "'Mission Center'"

    - name: Configure Mission Center command
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/command"
        value: "'missioncenter'"

    - name: Configure Mission Center binding
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/binding"
        value: "'<Control><Alt>Delete'"
    - name: Configure keyboard shortcuts
      become: no
      dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/www"
        value: "['<Super>b']"
    
    - name: Configure autostart
      become: no
      shell: cp -r autostart ~/.config/
      args:
        executable: /bin/bash

    - name: Remove temporary sudo password file
      become: no
      file:
        path: /tmp/sudo_pass
        state: absent
